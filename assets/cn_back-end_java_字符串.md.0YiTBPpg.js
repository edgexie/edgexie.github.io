import{_ as e,N as a,M as t,aF as r}from"./chunks/framework.wLg4U0bT.js";const S=JSON.parse('{"title":"字符串","description":"","frontmatter":{},"headers":[],"relativePath":"cn/back-end/java/字符串.md","filePath":"cn/back-end/java/字符串.md","lastUpdated":1721138052000}'),o={name:"cn/back-end/java/字符串.md"},c=r('<h1 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h1><p><a href="https://www.runoob.com/java/java-stringbuffer.html" target="_blank" rel="noreferrer">参考</a></p><p>在 java 中有三种字符串类，分别是<code>String、StringBuffer、StringBuilder</code>。</p><p><code>String</code> 类是 java 中最基本的字符串类，它不可变，即一旦创建，就不能改变。</p><p>如：<code>String.concat()</code>方法用于连接两个字符串，他不改变原字符串，而是返回一个新的字符串。</p><p><code>StringBuffer</code> 和 <code>StringBuilder</code> 类的对象能够被多次的修改，并且不产生新的未使用对象。</p><p><code>StringBuffer</code> 类是线程安全的，它可变，即我们可以改变它。</p><p><code>StringBuilder</code> 类是非线程安全的，它可变。相对<code>Stringbuffer</code>，<code>Stringbuilder</code>类速度更快，但是不能保证线程安全。</p>',8),d=[c];function n(i,_,p,s,f,l){return t(),a("div",null,d)}const g=e(o,[["render",n]]);export{S as __pageData,g as default};
